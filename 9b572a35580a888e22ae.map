{"version":3,"sources":["C:/Users/ghenriques/Documents/GitHub/expo-firebase/assets/flame.png","C:/Users/ghenriques/Documents/GitHub/expo-firebase/config/Firebase/firebase.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/config/Firebase/firebaseConfig.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/config/Firebase/context.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/config/Firebase/index.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/screens/Initial.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/components/FormInput.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/components/FormButton.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/components/ErrorMessage.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/components/AppLogo.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/config/Cache.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/screens/Login.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/screens/Signup.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/screens/ForgotPassword.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/navigation/AuthNavigation.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/screens/Home.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/screens/MonthList.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/screens/AddView.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/components/BudgetAvailable.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/screens/MonthShow.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/components/ExpenseView.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/screens/MonthExpensesShow.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/navigation/AppNavigation.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/navigation/index.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/App.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/web-build/register-service-worker.js","C:/Users/ghenriques/Documents/GitHub/expo-firebase/assets/icon.png"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","loginWithEmail","email","password","signInWithEmailAndPassword","signupWithEmail","createUserWithEmailAndPassword","signOut","checkUserAuth","user","onAuthStateChanged","passwordReset","sendPasswordResetEmail","currentUser","a","async","collection","doc","uid","get","createNewUser","userData","set","createNewMonth","monthData","uuid","getMonthList","group","where","snapshot","docs","map","data","createNewBudget","budgetData","getMonthBudgetList","month","createNewExpense","expenseData","getMonthExpenseList","FirebaseContext","createContext","FirebaseProvider","Provider","FirebaseConsumer","Consumer","withFirebaseHOC","Component","props","state","isAssetsLoadingComplete","componentDidMount","loadLocalAsync","navigation","navigate","console","log","Promise","all","Asset","loadAsync","require","Font","Icon","font","handleLoadingError","error","warn","handleFinishLoading","setState","AppLoading","startAsync","this","onFinish","onError","styles","StyleSheet","create","inputContainer","margin","iconStyle","marginRight","FormInput","iconName","iconColor","name","returnKeyType","keyboardType","placeholder","rest","View","style","leftIcon","Ionicons","size","color","leftIconContainerStyle","placeholderTextColor","input","FormButton","title","buttonType","buttonColor","type","buttonStyle","borderColor","borderRadius","titleStyle","container","marginLeft","errorText","ErrorMessage","errorValue","Text","AppLogo","source","width","height","Cache","key","value","AsyncStorage","setItem","getItem","validationSchema","Yup","shape","label","required","min","Login","passwordVisibility","rightIcon","goToSignup","goToForgotPassword","handlePasswordVisibility","prevState","handleOnLogin","values","actions","then","result","JSON","stringify","setFieldError","message","setSubmitting","SafeAreaView","logoContainer","initialValues","onSubmit","handleChange","handleSubmit","errors","isValid","touched","handleBlur","isSubmitting","onChangeText","autoCapitalize","onBlur","secureTextEntry","TouchableOpacity","onPress","buttonContainer","disabled","loading","general","flex","backgroundColor","marginTop","marginBottom","alignItems","confirmPassword","oneOf","check","Signup","confirmPasswordVisibility","passwordIcon","confirmPasswordIcon","goToLogin","handleConfirmPasswordVisibility","handleOnSignup","response","setFieldValue","containerStyle","checkBoxContainer","checkedIcon","iconType","uncheckedIcon","checkedTitle","checked","ForgotPassword","handlePasswordReset","text","fontSize","AuthNavigation","createStackNavigator","screen","initialRouteName","headerMode","Home","handleSignout","months","last_month","length","replace","parse","justifyContent","Months","FlatList","renderItem","item","signupTextCont","signupText","signupButton","paddingTop","flexGrow","paddingVertical","flexDirection","fontWeight","padding","uuidv4","AddForm","saveData","payee","date","timestamp","Date","now","max_budget","alert","budget","getParam","budgets","TextInput","inputBox","underlineColorAndroid","selectionColor","onSubmitEditing","focus","id","renderPickerOptions","Picker","Item","selectedValue","onValueChange","form","addMonthForm","addBudgetForm","addExpenseForm","KeyboardAvoidingView","behavior","enabled","button","buttonText","paddingHorizontal","marginVertical","textAlign","BudgetAvailable","rect","textFiller","text3","paddingBottom","lineHeight","ShowMonth","React","expenses","expense_sums","total_expenses","expenses_list","forEach","expense","getBudgets","getExpenses","budgetAvailable","parseFloat","DataTable","dataTable","Header","Title","numeric","i","budget_expenses_sum","Row","Cell","remaning","tableFiller","rect2","borderWidth","borderBottomWidth","budgetRemaning","budgetRemaningFiller","budgetRemaningText","food","foodFiller","foodText","foodRow","foodRowFiller","budgetAvailableFiller","budgetAvailableText","budgetAvailableRow","ExpenseView","expenseView","AppNavigation","monthList","addView","AddView","navigationOptions","params","showMonth","showMonthExpenses","MonthExpensesShow","mode","cardStyle","SwitchNavigator","createSwitchNavigator","Initial","Auth","App","AppContainer","createAppContainer","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.403b9071.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flame.28ea5d6a.png\";","import * as firebase from 'firebase'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport firebaseConfig from './firebaseConfig'\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst Firebase = {\r\n  // auth\r\n  loginWithEmail: (email, password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password)\r\n  },\r\n  signupWithEmail: (email, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n  },\r\n  signOut: () => {\r\n    return firebase.auth().signOut()\r\n  },\r\n  checkUserAuth: user => {\r\n    return firebase.auth().onAuthStateChanged(user)\r\n  },\r\n  passwordReset: email => {\r\n    return firebase.auth().sendPasswordResetEmail(email)\r\n  },\r\n  currentUser: async () => {\r\n    return await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(`${firebase.auth().currentUser.uid}`)\r\n      .get()\r\n  },\r\n  // firestore\r\n  createNewUser: userData => {\r\n    return firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(`${userData.uid}`)\r\n      .set(userData)\r\n  },\r\n  // months\r\n  createNewMonth: monthData => {\r\n    return firebase\r\n      .firestore()\r\n      .collection('months')\r\n      .doc(`${monthData.uuid}`)\r\n      .set(monthData)\r\n  },\r\n  getMonthList: async (group) => {\r\n    const snapshot = await firebase\r\n      .firestore()\r\n      .collection('months')\r\n      .where(\"group\", \"==\", group)\r\n      .get()\r\n\r\n    return snapshot.docs.map(doc => doc.data());\r\n  },\r\n  // budgets\r\n  createNewBudget: budgetData => {\r\n    return firebase\r\n      .firestore()\r\n      .collection('budgets')\r\n      .doc(`${budgetData.uuid}`)\r\n      .set(budgetData)\r\n  },\r\n  getMonthBudgetList: async (month, group) => {\r\n    const snapshot = await firebase\r\n      .firestore()\r\n      .collection('budgets')\r\n      .where(\"month\", \"==\", month)\r\n      .where(\"group\", \"==\", group)\r\n      .get()\r\n\r\n    return snapshot.docs.map(doc => doc.data());\r\n  },\r\n  // expenses\r\n  createNewExpense: expenseData => {\r\n    return firebase\r\n      .firestore()\r\n      .collection('expenses')\r\n      .doc(`${expenseData.uuid}`)\r\n      .set(expenseData)\r\n  },\r\n  getMonthExpenseList: async (month, group) => {\r\n    const snapshot = await firebase\r\n      .firestore()\r\n      .collection('expenses')\r\n      .where(\"month\", \"==\", month)\r\n      .where(\"group\", \"==\", group)\r\n      .get()\r\n\r\n    return snapshot.docs.map(doc => doc.data());\r\n  },\r\n}\r\n\r\nexport default Firebase\r\n","// Rename this file to \"firebaeConfig.js\" before use\r\n// Replace all Xs with real Firebase API keys\r\n\r\nexport default {\r\n  apiKey: \"AIzaSyBnuIHBvoGAHr-Hnlb-z7YitolgeVp6c4E\",\r\n  authDomain: \"budgets-65220.firebaseapp.com\",\r\n  databaseURL: \"https://budgets-65220.firebaseio.com\",\r\n  projectId: \"budgets-65220\",\r\n  storageBucket: \"budgets-65220.appspot.com\",\r\n  messagingSenderId: \"452923091471\",\r\n  appId: \"1:452923091471:web:93d3dbd49a8d16305ad17a\",\r\n  measurementId: \"G-BXJP8TNCE7\"\r\n}\r\n","import React, { createContext } from 'react'\r\n\r\nconst FirebaseContext = createContext({})\r\n\r\nexport const FirebaseProvider = FirebaseContext.Provider\r\n\r\nexport const FirebaseConsumer = FirebaseContext.Consumer\r\n\r\nexport const withFirebaseHOC = Component => props => (\r\n  <FirebaseConsumer>\r\n    {state => <Component {...props} firebase={state} />}\r\n  </FirebaseConsumer>\r\n)\r\n","import Firebase from './firebase'\r\nimport { FirebaseProvider, withFirebaseHOC } from './context'\r\n\r\nexport default Firebase\r\n\r\nexport { FirebaseProvider, withFirebaseHOC }\r\n","import React, { Component } from 'react'\r\nimport { AppLoading } from 'expo'\r\nimport { Asset } from 'expo-asset'\r\nimport * as Font from 'expo-font'\r\nimport * as Icon from '@expo/vector-icons'\r\nimport { withFirebaseHOC } from '../config/Firebase'\r\n\r\nclass Initial extends Component {\r\n  state = {\r\n    isAssetsLoadingComplete: false\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // previously\r\n      this.loadLocalAsync()\r\n\r\n      await this.props.firebase.checkUserAuth(user => {\r\n        if (user) {\r\n          // if the user has previously logged in\r\n          this.props.navigation.navigate('App')\r\n        } else {\r\n          // if the user has previously signed out from the app\r\n          this.props.navigation.navigate('Auth')\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  loadLocalAsync = async () => {\r\n    return await Promise.all([\r\n      Asset.loadAsync([\r\n        require('../assets/flame.png'),\r\n        require('../assets/icon.png')\r\n      ]),\r\n      Font.loadAsync({\r\n        ...Icon.Ionicons.font\r\n      })\r\n    ])\r\n  }\r\n\r\n  handleLoadingError = error => {\r\n    // In this case, you might want to report the error to your error\r\n    // reporting service, for example Sentry\r\n    console.warn(error)\r\n  }\r\n\r\n  handleFinishLoading = () => {\r\n    this.setState({ isAssetsLoadingComplete: true })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AppLoading\r\n        startAsync={this.loadLocalAsync}\r\n        onFinish={this.handleFinishLoading}\r\n        onError={this.handleLoadingError}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFirebaseHOC(Initial)\r\n","import React from 'react'\r\nimport { Input } from 'react-native-elements'\r\nimport { StyleSheet, View } from 'react-native'\r\nimport { Ionicons } from '@expo/vector-icons'\r\n\r\nconst FormInput = ({\r\n  iconName,\r\n  iconColor,\r\n  returnKeyType,\r\n  keyboardType,\r\n  name,\r\n  placeholder,\r\n  ...rest\r\n}) => (\r\n  <View style={styles.inputContainer}>\r\n    <Input\r\n      {...rest}\r\n      leftIcon={<Ionicons name={iconName} size={28} color={iconColor} />}\r\n      leftIconContainerStyle={styles.iconStyle}\r\n      placeholderTextColor='grey'\r\n      name={name}\r\n      placeholder={placeholder}\r\n      style={styles.input}\r\n    />\r\n  </View>\r\n)\r\n\r\nconst styles = StyleSheet.create({\r\n  inputContainer: {\r\n    margin: 15\r\n  },\r\n  iconStyle: {\r\n    marginRight: 10\r\n  }\r\n})\r\n\r\nexport default FormInput\r\n","import React from 'react'\r\nimport { Button } from 'react-native-elements'\r\n\r\nconst FormButton = ({ title, buttonType, buttonColor, ...rest }) => (\r\n  <Button\r\n    {...rest}\r\n    type={buttonType}\r\n    title={title}\r\n    buttonStyle={{ borderColor: buttonColor, borderRadius: 20 }}\r\n    titleStyle={{ color: buttonColor }}\r\n  />\r\n)\r\n\r\nexport default FormButton\r\n","import React from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\n\r\nconst ErrorMessage = ({ errorValue }) => (\r\n  <View style={styles.container}>\r\n    <Text style={styles.errorText}>{errorValue}</Text>\r\n  </View>\r\n)\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginLeft: 25\r\n  },\r\n  errorText: {\r\n    color: 'red'\r\n  }\r\n})\r\n\r\nexport default ErrorMessage\r\n","import React from 'react'\r\nimport { Image } from 'react-native-elements'\r\n\r\nconst AppLogo = () => (\r\n  <Image\r\n    source={require('../assets/flame.png')}\r\n    style={{ width: 200, height: 200 }}\r\n  />\r\n)\r\n\r\nexport default AppLogo\r\n","import {AsyncStorage} from 'react-native';\r\n\r\nconst Cache = {\r\n  set: async (key, value) => {\r\n    return await AsyncStorage.setItem(key, value);\r\n  },\r\n  get: async (key) => {\r\n    return await AsyncStorage.getItem(key);\r\n  }\r\n}\r\n\r\nexport default Cache\r\n","import React, { Component, Fragment } from 'react'\r\nimport { StyleSheet, SafeAreaView, View, TouchableOpacity } from 'react-native'\r\nimport { Button } from 'react-native-elements'\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { HideWithKeyboard } from 'react-native-hide-with-keyboard'\r\nimport FormInput from '../components/FormInput'\r\nimport FormButton from '../components/FormButton'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport AppLogo from '../components/AppLogo'\r\nimport { withFirebaseHOC } from '../config/Firebase'\r\nimport Cache from '../config/Cache'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .label('Email')\r\n    .email('Enter a valid email')\r\n    .required('Please enter a registered email'),\r\n  password: Yup.string()\r\n    .label('Password')\r\n    .required()\r\n    .min(6, 'Password must have at least 6 characters ')\r\n})\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    passwordVisibility: true,\r\n    rightIcon: 'ios-eye'\r\n  }\r\n\r\n  goToSignup = () => this.props.navigation.navigate('Signup')\r\n  goToForgotPassword = () => this.props.navigation.navigate('ForgotPassword')\r\n\r\n  handlePasswordVisibility = () => {\r\n    this.setState(prevState => ({\r\n      rightIcon: prevState.rightIcon === 'ios-eye' ? 'ios-eye-off' : 'ios-eye',\r\n      passwordVisibility: !prevState.passwordVisibility\r\n    }))\r\n  }\r\n\r\n  handleOnLogin = async (values, actions) => {\r\n    const { email, password } = values\r\n    try {\r\n      const response = await this.props.firebase.loginWithEmail(email, password)\r\n\r\n      if (response.user) {\r\n        this.props.firebase.currentUser().then((result) => {\r\n          var user = result.data()\r\n          Cache.set('currentUser', JSON.stringify(user))\r\n        });\r\n        this.props.navigation.navigate('Home')\r\n      }\r\n    } catch (error) {\r\n      actions.setFieldError('general', error.message)\r\n    } finally {\r\n      actions.setSubmitting(false)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { passwordVisibility, rightIcon } = this.state\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <HideWithKeyboard style={styles.logoContainer}>\r\n          <AppLogo />\r\n        </HideWithKeyboard>\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          onSubmit={(values, actions) => {\r\n            this.handleOnLogin(values, actions)\r\n          }}\r\n          validationSchema={validationSchema}>\r\n          {({\r\n            handleChange,\r\n            values,\r\n            handleSubmit,\r\n            errors,\r\n            isValid,\r\n            touched,\r\n            handleBlur,\r\n            isSubmitting\r\n          }) => (\r\n            <Fragment>\r\n              <FormInput\r\n                name='email'\r\n                value={values.email}\r\n                onChangeText={handleChange('email')}\r\n                placeholder='Enter email'\r\n                autoCapitalize='none'\r\n                iconName='ios-mail'\r\n                iconColor='#2C384A'\r\n                onBlur={handleBlur('email')}\r\n              />\r\n              <ErrorMessage errorValue={touched.email && errors.email} />\r\n              <FormInput\r\n                name='password'\r\n                value={values.password}\r\n                onChangeText={handleChange('password')}\r\n                placeholder='Enter password'\r\n                secureTextEntry={passwordVisibility}\r\n                iconName='ios-lock'\r\n                iconColor='#2C384A'\r\n                onBlur={handleBlur('password')}\r\n                rightIcon={\r\n                  <TouchableOpacity onPress={this.handlePasswordVisibility}>\r\n                    <Ionicons name={rightIcon} size={28} color='grey' />\r\n                  </TouchableOpacity>\r\n                }\r\n              />\r\n              <ErrorMessage errorValue={touched.password && errors.password} />\r\n              <View style={styles.buttonContainer}>\r\n                <FormButton\r\n                  buttonType='outline'\r\n                  onPress={handleSubmit}\r\n                  title='LOGIN'\r\n                  buttonColor='#039BE5'\r\n                  disabled={!isValid || isSubmitting}\r\n                  loading={isSubmitting}\r\n                />\r\n              </View>\r\n              <ErrorMessage errorValue={errors.general} />\r\n            </Fragment>\r\n          )}\r\n        </Formik>\r\n        <Button\r\n          title=\"Don't have an account? Sign Up\"\r\n          onPress={this.goToSignup}\r\n          titleStyle={{\r\n            color: '#F57C00'\r\n          }}\r\n          type='clear'\r\n        />\r\n        <Button\r\n          title='Forgot Password?'\r\n          onPress={this.goToForgotPassword}\r\n          titleStyle={{\r\n            color: '#039BE5'\r\n          }}\r\n          type='clear'\r\n        />\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    marginTop: 50\r\n  },\r\n  logoContainer: {\r\n    marginBottom: 15,\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    margin: 25\r\n  }\r\n})\r\n\r\nexport default withFirebaseHOC(Login)\r\n","import React, { Component, Fragment } from 'react'\r\nimport { StyleSheet, SafeAreaView, View, TouchableOpacity } from 'react-native'\r\nimport { Button, CheckBox } from 'react-native-elements'\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormInput from '../components/FormInput'\r\nimport FormButton from '../components/FormButton'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport { withFirebaseHOC } from '../config/Firebase'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required()\r\n    .min(2, 'Must have at least 2 characters'),\r\n  email: Yup.string()\r\n    .label('Email')\r\n    .email('Enter a valid email')\r\n    .required('Please enter a registered email'),\r\n  password: Yup.string()\r\n    .label('Password')\r\n    .required()\r\n    .min(6, 'Password should be at least 6 characters '),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref('password')], 'Confirm Password must matched Password')\r\n    .required('Confirm Password is required'),\r\n  check: Yup.boolean().oneOf([true], 'Please check the agreement')\r\n})\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    passwordVisibility: true,\r\n    confirmPasswordVisibility: true,\r\n    passwordIcon: 'ios-eye',\r\n    confirmPasswordIcon: 'ios-eye'\r\n  }\r\n\r\n  goToLogin = () => this.props.navigation.navigate('Login')\r\n\r\n  handlePasswordVisibility = () => {\r\n    this.setState(prevState => ({\r\n      passwordIcon:\r\n        prevState.passwordIcon === 'ios-eye' ? 'ios-eye-off' : 'ios-eye',\r\n      passwordVisibility: !prevState.passwordVisibility\r\n    }))\r\n  }\r\n\r\n  handleConfirmPasswordVisibility = () => {\r\n    this.setState(prevState => ({\r\n      confirmPasswordIcon:\r\n        prevState.confirmPasswordIcon === 'ios-eye' ? 'ios-eye-off' : 'ios-eye',\r\n      confirmPasswordVisibility: !prevState.confirmPasswordVisibility\r\n    }))\r\n  }\r\n\r\n  handleOnSignup = async (values, actions) => {\r\n    const { name, email, password } = values\r\n\r\n    try {\r\n      const response = await this.props.firebase.signupWithEmail(\r\n        email,\r\n        password\r\n      )\r\n\r\n      if (response.user.uid) {\r\n        const { uid } = response.user\r\n        const { group } = response.user\r\n        const userData = { email, name, uid, group }\r\n        await this.props.firebase.createNewUser(userData)\r\n        this.props.navigation.navigate('Home')\r\n      }\r\n    } catch (error) {\r\n      // console.error(error)\r\n      actions.setFieldError('general', error.message)\r\n    } finally {\r\n      actions.setSubmitting(false)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      passwordVisibility,\r\n      confirmPasswordVisibility,\r\n      passwordIcon,\r\n      confirmPasswordIcon\r\n    } = this.state\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            check: false\r\n          }}\r\n          onSubmit={(values, actions) => {\r\n            this.handleOnSignup(values, actions)\r\n          }}\r\n          validationSchema={validationSchema}>\r\n          {({\r\n            handleChange,\r\n            values,\r\n            handleSubmit,\r\n            errors,\r\n            isValid,\r\n            touched,\r\n            handleBlur,\r\n            isSubmitting,\r\n            setFieldValue\r\n          }) => (\r\n            <Fragment>\r\n              <FormInput\r\n                name='name'\r\n                value={values.name}\r\n                onChangeText={handleChange('name')}\r\n                placeholder='Enter your full name'\r\n                iconName='md-person'\r\n                iconColor='#2C384A'\r\n                onBlur={handleBlur('name')}\r\n              />\r\n              <ErrorMessage errorValue={touched.name && errors.name} />\r\n              <FormInput\r\n                name='email'\r\n                value={values.email}\r\n                onChangeText={handleChange('email')}\r\n                placeholder='Enter email'\r\n                autoCapitalize='none'\r\n                iconName='ios-mail'\r\n                iconColor='#2C384A'\r\n                onBlur={handleBlur('email')}\r\n              />\r\n              <ErrorMessage errorValue={touched.email && errors.email} />\r\n              <FormInput\r\n                name='password'\r\n                value={values.password}\r\n                onChangeText={handleChange('password')}\r\n                placeholder='Enter password'\r\n                iconName='ios-lock'\r\n                iconColor='#2C384A'\r\n                onBlur={handleBlur('password')}\r\n                secureTextEntry={passwordVisibility}\r\n                rightIcon={\r\n                  <TouchableOpacity onPress={this.handlePasswordVisibility}>\r\n                    <Ionicons name={passwordIcon} size={28} color='grey' />\r\n                  </TouchableOpacity>\r\n                }\r\n              />\r\n              <ErrorMessage errorValue={touched.password && errors.password} />\r\n              <FormInput\r\n                name='password'\r\n                value={values.confirmPassword}\r\n                onChangeText={handleChange('confirmPassword')}\r\n                placeholder='Confirm password'\r\n                iconName='ios-lock'\r\n                iconColor='#2C384A'\r\n                onBlur={handleBlur('confirmPassword')}\r\n                secureTextEntry={confirmPasswordVisibility}\r\n                rightIcon={\r\n                  <TouchableOpacity\r\n                    onPress={this.handleConfirmPasswordVisibility}>\r\n                    <Ionicons\r\n                      name={confirmPasswordIcon}\r\n                      size={28}\r\n                      color='grey'\r\n                    />\r\n                  </TouchableOpacity>\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                errorValue={touched.confirmPassword && errors.confirmPassword}\r\n              />\r\n              <CheckBox\r\n                containerStyle={styles.checkBoxContainer}\r\n                checkedIcon='check-box'\r\n                iconType='material'\r\n                uncheckedIcon='check-box-outline-blank'\r\n                title='Agree to terms and conditions'\r\n                checkedTitle='You agreed to our terms and conditions'\r\n                checked={values.check}\r\n                onPress={() => setFieldValue('check', !values.check)}\r\n              />\r\n              <View style={styles.buttonContainer}>\r\n                <FormButton\r\n                  buttonType='outline'\r\n                  onPress={handleSubmit}\r\n                  title='SIGNUP'\r\n                  buttonColor='#F57C00'\r\n                  disabled={!isValid || isSubmitting}\r\n                  loading={isSubmitting}\r\n                />\r\n              </View>\r\n              <ErrorMessage errorValue={errors.general} />\r\n            </Fragment>\r\n          )}\r\n        </Formik>\r\n        <Button\r\n          title='Have an account? Login'\r\n          onPress={this.goToLogin}\r\n          titleStyle={{\r\n            color: '#039BE5'\r\n          }}\r\n          type='clear'\r\n        />\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    marginTop: 50\r\n  },\r\n  logoContainer: {\r\n    marginBottom: 15,\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    margin: 25\r\n  },\r\n  checkBoxContainer: {\r\n    backgroundColor: '#fff',\r\n    borderColor: '#fff'\r\n  }\r\n})\r\n\r\nexport default withFirebaseHOC(Signup)\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Text, SafeAreaView, View, StyleSheet } from 'react-native'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormInput from '../components/FormInput'\r\nimport FormButton from '../components/FormButton'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport { withFirebaseHOC } from '../config/Firebase'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .label('Email')\r\n    .email('Enter a valid email')\r\n    .required('Please enter a registered email')\r\n})\r\n\r\nclass ForgotPassword extends Component {\r\n  handlePasswordReset = async (values, actions) => {\r\n    const { email } = values\r\n\r\n    try {\r\n      await this.props.firebase.passwordReset(email)\r\n      console.log('Password reset email sent successfully')\r\n      this.props.navigation.navigate('Login')\r\n    } catch (error) {\r\n      actions.setFieldError('general', error.message)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <Text style={styles.text}>Forgot Password?</Text>\r\n        <Formik\r\n          initialValues={{ email: '' }}\r\n          onSubmit={(values, actions) => {\r\n            this.handlePasswordReset(values, actions)\r\n          }}\r\n          validationSchema={validationSchema}>\r\n          {({\r\n            handleChange,\r\n            values,\r\n            handleSubmit,\r\n            errors,\r\n            isValid,\r\n            touched,\r\n            handleBlur,\r\n            isSubmitting\r\n          }) => (\r\n            <Fragment>\r\n              <FormInput\r\n                name='email'\r\n                value={values.email}\r\n                onChangeText={handleChange('email')}\r\n                placeholder='Enter email'\r\n                autoCapitalize='none'\r\n                iconName='ios-mail'\r\n                iconColor='#2C384A'\r\n                onBlur={handleBlur('email')}\r\n              />\r\n              <ErrorMessage errorValue={touched.email && errors.email} />\r\n              <View style={styles.buttonContainer}>\r\n                <FormButton\r\n                  buttonType='outline'\r\n                  onPress={handleSubmit}\r\n                  title='Send Email'\r\n                  buttonColor='#039BE5'\r\n                  disabled={!isValid || isSubmitting}\r\n                />\r\n              </View>\r\n              <ErrorMessage errorValue={errors.general} />\r\n            </Fragment>\r\n          )}\r\n        </Formik>\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    marginTop: 150\r\n  },\r\n  text: {\r\n    color: '#333',\r\n    fontSize: 24,\r\n    marginLeft: 25\r\n  },\r\n  buttonContainer: {\r\n    margin: 25\r\n  }\r\n})\r\n\r\nexport default withFirebaseHOC(ForgotPassword)\r\n","import { createStackNavigator } from 'react-navigation-stack'\r\nimport Login from '../screens/Login'\r\nimport Signup from '../screens/Signup'\r\nimport ForgotPassword from '../screens/ForgotPassword'\r\n\r\nconst AuthNavigation = createStackNavigator(\r\n  {\r\n    Login: { screen: Login },\r\n    Signup: { screen: Signup },\r\n    ForgotPassword: { screen: ForgotPassword }\r\n  },\r\n  {\r\n    initialRouteName: 'Login',\r\n    headerMode: 'none'\r\n  }\r\n)\r\n\r\nexport default AuthNavigation\r\n","import React, { Component } from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { Button } from 'react-native-elements'\r\nimport { withFirebaseHOC } from '../config/Firebase'\r\nimport Cache from '../config/Cache'\r\n\r\nclass Home extends Component {\r\n  handleSignout = async () => {\r\n    try {\r\n      await this.props.firebase.signOut()\r\n      this.props.navigation.navigate('Login')\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  getMonthList(user){\r\n    var monthList = this.props.firebase.getMonthList(user.group);\r\n    monthList.then(months => {\r\n      var last_month = months[months.length-1]\r\n      this.props.navigation.replace('showMonth', {title: last_month.name, month: last_month})\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    Cache.get('currentUser').then((result) => {\r\n      var user = JSON.parse(result)\r\n      this.setState({'user': user})\r\n      this.getMonthList(user)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n})\r\n\r\nexport default withFirebaseHOC(Home)\r\n","import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Keyboard, FlatList } from 'react-native';\r\nimport { withFirebaseHOC } from '../config/Firebase'\r\nimport Cache from '../config/Cache'\r\n\r\nclass Months extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      months: [],\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  getMonthList(user){\r\n    var monthList = this.props.firebase.getMonthList(user.group);\r\n    monthList.then(months => {\r\n      this.setState({\r\n        months: months\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    Cache.get('currentUser').then((result) => {\r\n      var user = JSON.parse(result)\r\n      this.setState({'user': user})\r\n      this.getMonthList(user)\r\n    });\r\n  }\r\n\r\n  render() {\r\n      return(\r\n              <View style={styles.container}>\r\n              <FlatList\r\n                data={this.state.months}\r\n                renderItem={({item}) =>\r\n                  <Text style={styles.item} onPress={() => this.props.navigation.navigate('showMonth', {title: item.name, month: item})}>{item.name}</Text>\r\n                }\r\n              />\r\n              <View style={styles.signupTextCont}>\r\n                  <Text style={styles.signupText}></Text>\r\n                  <TouchableOpacity onPress={() => this.props.navigation.navigate('addView', {title: \"Add Month\"})}>\r\n                    <Text style={styles.signupButton}>Add Month</Text>\r\n                  </TouchableOpacity>\r\n              </View>\r\n          </View>\r\n      )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 22,\r\n      backgroundColor: 'white',\r\n    },\r\n    signupTextCont: {\r\n      flexGrow: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'flex-end',\r\n      paddingVertical: 16,\r\n      flexDirection: 'row',\r\n    },\r\n    signupText: {\r\n      color: '#12799f',\r\n      fontSize:16,\r\n    },\r\n    signupButton: {\r\n        color: '#12799f',\r\n        fontSize:16,\r\n        fontWeight: '500',\r\n    },\r\n    item: {\r\n      padding: 10,\r\n      fontSize: 18,\r\n      height: 44,\r\n    },\r\n});\r\n\r\nexport default withFirebaseHOC(Months)\r\n","import React, { Component } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  AsyncStorage,\r\n  Keyboard,\r\n  Picker,\r\n  KeyboardAvoidingView,\r\n} from 'react-native';\r\n\r\nimport { Constants, FileSystem } from 'expo';\r\nimport { withFirebaseHOC } from '../config/Firebase'\r\nimport Cache from '../config/Cache'\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nclass AddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { navigation } = this.props;\r\n    this.state = {\r\n      month: navigation.getParam('month'),\r\n      title: navigation.getParam('title'),\r\n      budgets: navigation.getParam('budgets'),\r\n      name: '',\r\n      value: 0,\r\n      payee: '',\r\n      date: '',\r\n      user: '',\r\n    }\r\n    console.log(navigation.getParam('budgets'));\r\n  }\r\n\r\n  componentDidMount(){\r\n    Cache.get('currentUser').then((result) => {\r\n      var user = JSON.parse(result)\r\n      this.setState({'user': user})\r\n    });\r\n  }\r\n\r\n  saveData = async () => {\r\n    const { name, value, type, payee, date } = this.state;\r\n\r\n    if (this.state.title == 'Add Month') {\r\n\r\n      try {\r\n        const monthData = {\r\n          uuid: `${uuidv4()}`,\r\n          user: this.state.user.uid,\r\n          group: this.state.user.group,\r\n          name: name,\r\n          timestamp: Date.now(),\r\n          max_budget: value\r\n        };\r\n\r\n        await this.props.firebase.createNewMonth(monthData);\r\n\r\n        this.props.navigation.navigate('monthList');\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    } else if (this.state.title == \"Add Budget\") {\r\n      try {\r\n        const budgetData = {\r\n          uuid: `${uuidv4()}`,\r\n          user: this.state.user.uid,\r\n          group: this.state.user.group,\r\n          month: this.state.month.uuid,\r\n          name: name,\r\n          timestamp: Date.now(),\r\n          value: value\r\n        };\r\n\r\n        console.log(budgetData);\r\n\r\n        await this.props.firebase.createNewBudget(budgetData);\r\n\r\n        this.props.navigation.navigate('monthList');\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }else if (this.state.title == \"Add Expense\") {\r\n      try {\r\n        const expenseData = {\r\n          uuid: `${uuidv4()}`,\r\n          user: this.state.user.uid,\r\n          group: this.state.user.group,\r\n          month: this.state.month.uuid,\r\n          budget: name,\r\n          payee: payee,\r\n          timestamp: Date.now(),\r\n          value: value,\r\n          date: date\r\n        };\r\n\r\n        await this.props.firebase.createNewExpense(expenseData);\r\n\r\n        this.props.navigation.navigate('showMonth');\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  addMonthForm() {\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          style={styles.inputBox}\r\n          onChangeText={name => this.setState({ name })}\r\n          underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n          placeholder=\"Name\"\r\n          placeholderTextColor=\"#002f6c\"\r\n          selectionColor=\"#fff\"\r\n          keyboardType=\"email-address\"\r\n          onSubmitEditing={() => this.password.focus()}\r\n        />\r\n\r\n        <TextInput\r\n          id=\"value\"\r\n          style={styles.inputBox}\r\n          onChangeText={value => this.setState({ value })}\r\n          underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n          placeholder=\"Max budget\"\r\n          placeholderTextColor=\"#002f6c\"\r\n          selectionColor=\"#fff\"\r\n          keyboardType=\"numeric\"\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  addBudgetForm() {\r\n    return(\r\n      <View>\r\n        <Text>{this.state.month.name}</Text>\r\n        <TextInput\r\n          style={styles.inputBox}\r\n          onChangeText={name => this.setState({ name })}\r\n          underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n          placeholder=\"Name\"\r\n          placeholderTextColor=\"#002f6c\"\r\n          selectionColor=\"#fff\"\r\n          keyboardType=\"email-address\"\r\n          onSubmitEditing={() => this.value.focus()}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.inputBox}\r\n          onChangeText={value => this.setState({ value })}\r\n          underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n          placeholder=\"Value\"\r\n          placeholderTextColor=\"#002f6c\"\r\n          selectionColor=\"#fff\"\r\n          keyboardType=\"numeric\"\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  addExpenseForm() {\r\n    const renderPickerOptions = this.state.budgets.map(budget => {\r\n      return <Picker.Item label={budget.name} value={budget.name} />\r\n    })\r\n    return(\r\n      <View>\r\n        <Text>{this.state.month.name}</Text>\r\n        <Picker\r\n          selectedValue={(this.state.budgets.length == 1) ? this.state.budgets[0].key : \"\"}\r\n          onValueChange={name => this.setState({ name })}\r\n          >\r\n          <Picker.Item label=\"Choose a budget\" />\r\n          {renderPickerOptions}\r\n        </Picker>\r\n\r\n        <TextInput\r\n          style={styles.inputBox}\r\n          onChangeText={payee => this.setState({ payee })}\r\n          underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n          placeholder=\"Payee\"\r\n          placeholderTextColor=\"#002f6c\"\r\n          selectionColor=\"#fff\"\r\n          keyboardType=\"text\"\r\n          onSubmitEditing={() => this.value.focus()}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.inputBox}\r\n          onChangeText={value => this.setState({ value })}\r\n          underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n          placeholder=\"Value\"\r\n          placeholderTextColor=\"#002f6c\"\r\n          selectionColor=\"#fff\"\r\n          keyboardType=\"numeric\"\r\n          onSubmitEditing={() => this.date.focus()}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.inputBox}\r\n          onChangeText={date => this.setState({ date })}\r\n          underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n          placeholder=\"Date\"\r\n          placeholderTextColor=\"#002f6c\"\r\n          selectionColor=\"#fff\"\r\n          keyboardType=\"datetime\"\r\n        />\r\n\r\n      </View>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let form\r\n\r\n    if (this.state.title == \"Add Month\") {\r\n      form = this.addMonthForm()\r\n    }\r\n    else if (this.state.title == \"Add Budget\") {\r\n      form = this.addBudgetForm()\r\n    }\r\n    else if (this.state.title == \"Add Expense\") {\r\n      form = this.addExpenseForm()\r\n    }\r\n\r\n    return (\r\n      <KeyboardAvoidingView style={styles.container} behavior=\"padding\" enabled>\r\n        <View style={styles.container}>\r\n\r\n          {form}\r\n\r\n          <TouchableOpacity style={styles.button}>\r\n            <Text style={styles.buttonText} onPress={this.saveData}>\r\n              {this.state.title}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  inputBox: {\r\n    width: 300,\r\n    backgroundColor: '#eeeeee',\r\n    borderRadius: 25,\r\n    paddingHorizontal: 16,\r\n    fontSize: 16,\r\n    color: '#002f6c',\r\n    marginVertical: 10,\r\n  },\r\n  button: {\r\n    width: 300,\r\n    backgroundColor: '#4f83cc',\r\n    borderRadius: 25,\r\n    marginVertical: 10,\r\n    paddingVertical: 12,\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default withFirebaseHOC(AddForm)\r\n","import React, { Component } from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\n\r\n\r\nexport default class BudgetAvailable extends Component {\r\n  render() {\r\n    return (\r\n      <View style={[styles.container, this.props.style]}>\r\n        <View style={styles.rect}>\r\n          <Text style={styles.text}>Budget{\"\\n\"}Available</Text>\r\n          <View style={styles.textFiller} />\r\n          <Text style={styles.text3}>${this.props.max_budget}</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  rect: {\r\n    paddingBottom: 15,\r\n    backgroundColor: \"rgba(230, 230, 230,1)\",\r\n    flexDirection: \"row\"\r\n  },\r\n  text: {\r\n    width: 107,\r\n    color: \"#121212\",\r\n    fontSize: 16,\r\n    lineHeight: 16,\r\n    marginLeft: 20,\r\n    marginTop: 12\r\n  },\r\n  textFiller: {\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  text3: {\r\n    width: 184,\r\n    height: 29,\r\n    color: \"#121212\",\r\n    fontSize: 30,\r\n    lineHeight: 30,\r\n    textAlign: \"right\",\r\n    marginRight: 20,\r\n    marginTop: 12\r\n  }\r\n});\r\n","import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, TouchableIcon, Keyboard, FlatList, Button, Icon } from 'react-native';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nimport BudgetAvailable from \"../components/BudgetAvailable\";\r\nimport { withFirebaseHOC } from '../config/Firebase'\r\nimport Cache from '../config/Cache'\r\n\r\nclass LogoTitle extends React.Component {\r\n  render() {\r\n    return (\r\n      <Text>Cenas</Text>\r\n    );\r\n  }\r\n}\r\n\r\nclass ShowMonth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      budgets: [],\r\n      expenses: [],\r\n      expense_sums: {},\r\n      total_expenses: 0,\r\n      month: this.props.navigation.getParam('month')\r\n    };\r\n  }\r\n\r\n  getBudgets(expense_sums){\r\n    var monthBudgetList = this.props.firebase.getMonthBudgetList(this.state.month.uuid, this.state.user.group)\r\n\r\n    monthBudgetList.then(budgets => {\r\n      this.setState({\r\n        budgets: budgets\r\n      });\r\n    });\r\n  }\r\n\r\n  getExpenses(){\r\n    var monthExpenses = this.props.firebase.getMonthExpenseList(this.state.month.uuid, this.state.user.group)\r\n\r\n    monthExpenses.then(expenses_list => {\r\n      var expense_sums = {}\r\n      var total_expenses = 0\r\n\r\n      expenses_list.forEach(expense => {\r\n        if (expense_sums[expense.budget]){\r\n          expense_sums[expense.budget] += expense.value\r\n        }\r\n        else {\r\n          expense_sums[expense.budget] = expense.value\r\n        }\r\n\r\n        total_expenses += expense.value\r\n      })\r\n\r\n      this.setState({\r\n        total_expenses: total_expenses,\r\n        expense_sums: expense_sums,\r\n        expenses: expenses_list\r\n      });\r\n\r\n      this.getBudgets()\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    Cache.get('currentUser').then((result) => {\r\n      var user = JSON.parse(result)\r\n      this.setState({'user': user})\r\n      this.getExpenses()\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n  }\r\n\r\n  render() {\r\n      return(\r\n            <View style={styles.container}>\r\n              <BudgetAvailable style={styles.budgetAvailable} max_budget={parseFloat(this.state.month.max_budget-this.state.total_expenses)} />\r\n\r\n              <DataTable style={styles.dataTable}>\r\n                <DataTable.Header>\r\n                  <DataTable.Title>Budget</DataTable.Title>\r\n                  <DataTable.Title numeric>Original</DataTable.Title>\r\n                  <DataTable.Title numeric>Available</DataTable.Title>\r\n                </DataTable.Header>\r\n                {this.state.budgets.map((budget, i) => {\r\n                var budget_expenses_sum = (budget.name in this.state.expense_sums) ? this.state.expense_sums[budget.name] : 0;\r\n                budget['remaning'] = parseFloat(budget.value-budget_expenses_sum)\r\n                return (\r\n                  <DataTable.Row key={i} onPress={() => this.props.navigation.navigate('showMonthExpenses', {title: this.state.month.name+\": \"+budget.name+\" expenses\", budget: budget, expenses: this.state.expenses, month: this.state.month, total_expenses: this.state.total_expenses})}>\r\n                    <DataTable.Cell>{budget.name}</DataTable.Cell>\r\n                    <DataTable.Cell numeric>{budget.value}</DataTable.Cell>\r\n                    <DataTable.Cell numeric>{budget.remaning}</DataTable.Cell>\r\n                  </DataTable.Row>\r\n                  )\r\n                })}\r\n              </DataTable>\r\n              <View style={styles.tableFiller} />\r\n              <View style={styles.signupTextCont}>\r\n                  <TouchableOpacity onPress={() => this.props.navigation.navigate('addView', {title: \"Add Budget\", month: this.state.month})}>\r\n                    <Text style={styles.signupButton}>Add Budget</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity onPress={() => this.props.navigation.navigate('addView', {title: \"Add Expense\", month: this.state.month, budgets: this.state.budgets})}>\r\n                    <Text style={styles.signupButton}>Add Expense</Text>\r\n                  </TouchableOpacity>\r\n              </View>\r\n          </View>\r\n      )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 0,\r\n      flexDirection: 'column',\r\n    },\r\n    signupTextCont: {\r\n      justifyContent: 'space-around',\r\n      paddingVertical: 16,\r\n      flexDirection: 'row',\r\n    },\r\n    signupText: {\r\n      color: '#12799f',\r\n      fontSize: 16,\r\n    },\r\n    signupButton: {\r\n      color: '#12799f',\r\n      fontSize: 16,\r\n      fontWeight: '500',\r\n    },\r\n    item: {\r\n      padding: 10,\r\n      fontSize: 18,\r\n      height: 44,\r\n    },\r\n    tableFiller: {\r\n      flex: 1\r\n    },\r\n    dataTable: {\r\n      flex: 1\r\n    },\r\n});\r\n\r\nexport default withFirebaseHOC(ShowMonth)\r\n","import React, { Component } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\n\nfunction ExpenseView(props) {\n  console.log(props);\n  return (\n    <View style={[styles.container, props.style]}>\n      <View style={styles.rect2}>\n        <Text style={styles.budgetRemaning}>Budget Remaning</Text>\n        <View style={styles.budgetRemaningFiller}></View>\n        <Text style={styles.budgetRemaningText}>${props.max_budget}</Text>\n      </View>\n      <View style={styles.rect}>\n        <View style={styles.foodRow}>\n          <Text style={styles.food}>{props.budget.name}</Text>\n          <View style={styles.foodFiller}></View>\n          <Text style={styles.foodText}>${props.budget.value}</Text>\n        </View>\n        <View style={styles.foodRowFiller}></View>\n        <View style={styles.budgetAvailableRow}>\n          <Text style={styles.budgetAvailable}>Budget</Text>\n          <View style={styles.budgetAvailableFiller}></View>\n          <Text style={styles.budgetAvailableText}>${props.budget.remaning}</Text>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  rect2: {\n    height: 30,\n    backgroundColor: \"rgba(230, 230, 230,1)\",\n    borderColor: \"rgba(0,0,0,1)\",\n    borderWidth: 0,\n    borderBottomWidth: 2,\n    flexDirection: \"row\"\n  },\n  budgetRemaning: {\n    width: 173,\n    color: \"#121212\",\n    fontSize: 15,\n    marginLeft: 14,\n    marginTop: 4\n  },\n  budgetRemaningFiller: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  budgetRemaningText: {\n    width: 113,\n    height: 20,\n    color: \"#121212\",\n    fontSize: 15,\n    textAlign: \"right\",\n    marginRight: 18,\n    marginTop: 2\n  },\n  rect: {\n    backgroundColor: \"rgba(230, 230, 230,1)\"\n  },\n  food: {\n    width: 173,\n    color: \"#121212\",\n    fontSize: 20,\n  },\n  foodFiller: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  foodText: {\n    width: 113,\n    color: \"#121212\",\n    fontSize: 15,\n    textAlign: \"right\",\n    marginTop: 2,\n  },\n  foodRow: {\n    flexDirection: \"row\",\n    marginTop: 4,\n    marginLeft: 14,\n    marginRight: 18\n  },\n  foodRowFiller: {\n    flex: 1\n  },\n  budgetAvailable: {\n    color: \"#121212\",\n    fontSize: 20,\n  },\n  budgetAvailableFiller: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  budgetAvailableText: {\n    color: \"#121212\",\n    fontSize: 30,\n    textAlign: \"right\",\n  },\n  budgetAvailableRow: {\n    flexDirection: \"row\",\n    marginBottom: 7,\n    marginLeft: 14,\n    marginRight: 18\n  }\n});\n\nexport default ExpenseView;\n","import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, TouchableIcon, Keyboard, FlatList, Button, Icon } from 'react-native';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nimport ExpenseView from \"../components/ExpenseView\";\r\nimport { withFirebaseHOC } from '../config/Firebase'\r\nimport Cache from '../config/Cache'\r\n\r\nclass ShowMonth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { navigation } = this.props\r\n    this.state = {\r\n      budget: navigation.getParam('budget'),\r\n      month: navigation.getParam('month'),\r\n      total_expenses: navigation.getParam('total_expenses'),\r\n      expenses: navigation.getParam('expenses'),\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    Cache.get('currentUser').then((result) => {\r\n      var user = JSON.parse(result)\r\n      this.setState({'user': user})\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var budget = this.state.budget\r\n      return(\r\n              <View style={styles.container}>\r\n              <ExpenseView style={styles.expenseView} budget={budget} max_budget={parseFloat(this.state.month.max_budget-this.state.total_expenses)}></ExpenseView>\r\n              <DataTable>\r\n                <DataTable.Header>\r\n                  <DataTable.Title>Payee</DataTable.Title>\r\n                  <DataTable.Title numeric>Value</DataTable.Title>\r\n                  <DataTable.Title numeric>Date</DataTable.Title>\r\n                </DataTable.Header>\r\n                {this.state.expenses.map((expense, i) => {\r\n                  if (expense.budget == this.state.budget.name) {\r\n                  return (\r\n                    <DataTable.Row key={i}>\r\n                      <DataTable.Cell>{expense.payee}</DataTable.Cell>\r\n                      <DataTable.Cell numeric>{expense.value}</DataTable.Cell>\r\n                      <DataTable.Cell numeric>{expense.date}</DataTable.Cell>\r\n                    </DataTable.Row>\r\n                  )}\r\n                })}\r\n              </DataTable>\r\n\r\n              <View style={styles.signupTextCont}>\r\n                  <TouchableOpacity onPress={() => this.props.navigation.navigate('addView', {title: \"Add Expense\", month: this.state.month, budgets: [this.state.budget]})}>\r\n                    <Text style={styles.signupButton}>Add Expense</Text>\r\n                  </TouchableOpacity>\r\n              </View>\r\n          </View>\r\n      )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 0,\r\n      backgroundColor: 'white',\r\n    },\r\n    signupTextCont: {\r\n      flexGrow: 1,\r\n      justifyContent: 'space-around',\r\n      alignItems: 'flex-end',\r\n      paddingVertical: 16,\r\n      flexDirection: 'row',\r\n    },\r\n    signupText: {\r\n      color: '#12799f',\r\n      fontSize: 16,\r\n    },\r\n    signupButton: {\r\n      color: '#12799f',\r\n      fontSize: 16,\r\n      fontWeight: '500',\r\n    },\r\n    item: {\r\n      padding: 10,\r\n      fontSize: 18,\r\n      height: 44,\r\n    },\r\n});\r\n\r\nexport default withFirebaseHOC(ShowMonth)\r\n","import { createStackNavigator } from 'react-navigation-stack'\r\nimport Home from '../screens/Home'\r\nimport Months from '../screens/MonthList'\r\nimport AddView from '../screens/AddView'\r\nimport ShowMonth from '../screens/MonthShow'\r\nimport MonthExpensesShow from '../screens/MonthExpensesShow'\r\n\r\nconst AppNavigation = createStackNavigator(\r\n  {\r\n    Home: { screen: Home },\r\n    monthList: { screen: Months },\r\n    addView: {\r\n      screen: AddView,\r\n      navigationOptions: ({ navigation }) => ({\r\n        title: `${navigation.state.params.title}`,\r\n      }),\r\n    },\r\n    showMonth: {\r\n      screen: ShowMonth,\r\n      navigationOptions: ({ navigation }) => ({\r\n        title: `${navigation.state.params.title}`,\r\n      }),\r\n    },\r\n    showMonthExpenses: {\r\n      screen: MonthExpensesShow,\r\n      navigationOptions: ({ navigation }) => ({\r\n        title: `${navigation.state.params.title}`,\r\n      }), \r\n    },\r\n  },\r\n  {\r\n    initialRouteName: 'Home',\r\n    mode: 'card',\r\n    cardStyle: { flex: 1 },\r\n  }\r\n)\r\n\r\nexport default AppNavigation\r\n","import { createSwitchNavigator, createAppContainer } from 'react-navigation'\r\nimport Initial from '../screens/Initial'\r\nimport AuthNavigation from './AuthNavigation'\r\nimport AppNavigation from './AppNavigation'\r\n\r\nconst SwitchNavigator = createSwitchNavigator(\r\n  {\r\n    Initial: Initial,\r\n    Auth: AuthNavigation,\r\n    App: AppNavigation\r\n  },\r\n  {\r\n    initialRouteName: 'Initial',\r\n    mode: 'card',\r\n    cardStyle: { flex: 1 },\r\n  }\r\n)\r\n\r\nconst AppContainer = createAppContainer(SwitchNavigator)\r\n\r\nexport default AppContainer\r\n","import React from 'react'\r\nimport AppContainer from './navigation'\r\nimport Firebase, { FirebaseProvider } from './config/Firebase'\r\n\r\nexport default function App() {\r\n  return (\r\n    <FirebaseProvider value={Firebase}>\r\n      <AppContainer />\r\n    </FirebaseProvider>\r\n  )\r\n}\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/icon.f82b34f9.png\";"],"sourceRoot":""}